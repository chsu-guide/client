{
    "openapi": "3.0.1",
    "info": {
        "title": "API CHSU",
        "description": "Приложение для расширения api системы Tandem",
        "version": "1.2.0"
    },
    "servers": [
        {
            "url": "http://api.chsu.ru",
            "description": "Generated server url"
        }
    ],
    "tags": [
        {
            "name": "Person",
            "description": "Работа с персонами"
        },
        {
            "name": "Auth",
            "description": "Авторизация в системе"
        },
        {
            "name": "Dictionary",
            "description": "Справочная информация"
        },
        {
            "name": "Building",
            "description": "Здания"
        },
        {
            "name": "StudentGroup",
            "description": "Студенческие группы"
        },
        {
            "name": "Department",
            "description": "Департаменты"
        },
        {
            "name": "params-time-table",
            "description": "Параметры расписания"
        },
        {
            "name": "Users",
            "description": "Пользователи"
        },
        {
            "name": "Auditorium",
            "description": "Аудитории"
        },
        {
            "name": "Roles",
            "description": "Роли пользователя"
        },
        {
            "name": "TimeTable",
            "description": "Учебное расписание"
        },
        {
            "name": "Discipline",
            "description": "Дисцилины"
        }
    ],
    "paths": {
        "/notificationEntities": {
            "get": {
                "tags": [
                    "notification-entity-entity-controller"
                ],
                "description": "get-notificationentity",
                "operationId": "getCollectionResource-notificationentity-get_1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "required": false,
                        "schema": {
                            "minimum": 0,
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedModelEntityModelNotificationEntity"
                                }
                            },
                            "application/x-spring-data-compact+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedModelEntityModelNotificationEntity"
                                }
                            },
                            "text/uri-list": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "notification-entity-entity-controller"
                ],
                "description": "create-notificationentity",
                "operationId": "postCollectionResource-notificationentity-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationEntityRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelNotificationEntity"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notificationEntities/search/findAllSendNotificationByKeys": {
            "get": {
                "tags": [
                    "notification-entity-search-controller"
                ],
                "operationId": "executeSearch-notificationentity-get",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "COMMISSION_EXAM",
                                "EXPIRES_REG_ADDRESS"
                            ]
                        }
                    },
                    {
                        "name": "keyObjects",
                        "in": "query",
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelEntityModelNotificationEntity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/notificationEntities/{id}": {
            "get": {
                "tags": [
                    "notification-entity-entity-controller"
                ],
                "description": "get-notificationentity",
                "operationId": "getItemResource-notificationentity-get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelNotificationEntity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "notification-entity-entity-controller"
                ],
                "description": "update-notificationentity",
                "operationId": "putItemResource-notificationentity-put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationEntityRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelNotificationEntity"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelNotificationEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "notification-entity-entity-controller"
                ],
                "description": "delete-notificationentity",
                "operationId": "deleteItemResource-notificationentity-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "notification-entity-entity-controller"
                ],
                "description": "patch-notificationentity",
                "operationId": "patchItemResource-notificationentity-patch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationEntityRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelNotificationEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/paramsTimeTables": {
            "get": {
                "tags": [
                    "params-time-table-entity-controller"
                ],
                "description": "get-paramstimetable",
                "operationId": "getCollectionResource-paramstimetable-get_1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "required": false,
                        "schema": {
                            "minimum": 0,
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedModelEntityModelParamsTimeTable"
                                }
                            },
                            "application/x-spring-data-compact+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedModelEntityModelParamsTimeTable"
                                }
                            },
                            "text/uri-list": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "params-time-table-entity-controller"
                ],
                "description": "create-paramstimetable",
                "operationId": "postCollectionResource-paramstimetable-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParamsTimeTableRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelParamsTimeTable"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paramsTimeTables/search/findByParamType": {
            "get": {
                "tags": [
                    "params-time-table-search-controller"
                ],
                "operationId": "executeSearch-paramstimetable-get",
                "parameters": [
                    {
                        "name": "paramType",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TIME_TABLE_MODE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelParamsTimeTable"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/paramsTimeTables/{id}": {
            "get": {
                "tags": [
                    "params-time-table-entity-controller"
                ],
                "description": "get-paramstimetable",
                "operationId": "getItemResource-paramstimetable-get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelParamsTimeTable"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "params-time-table-entity-controller"
                ],
                "description": "update-paramstimetable",
                "operationId": "putItemResource-paramstimetable-put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParamsTimeTableRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelParamsTimeTable"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelParamsTimeTable"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "params-time-table-entity-controller"
                ],
                "description": "delete-paramstimetable",
                "operationId": "deleteItemResource-paramstimetable-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "params-time-table-entity-controller"
                ],
                "description": "patch-paramstimetable",
                "operationId": "patchItemResource-paramstimetable-patch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParamsTimeTableRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelParamsTimeTable"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "tags": [
                    "profile-controller"
                ],
                "operationId": "listAllFormsOfMetadata_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepresentationModelObject"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profile/notificationEntities": {
            "get": {
                "tags": [
                    "profile-controller"
                ],
                "operationId": "descriptor_1_1_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/alps+json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/schema+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonSchema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profile/paramsTimeTables": {
            "get": {
                "tags": [
                    "profile-controller"
                ],
                "operationId": "descriptor_1_1_2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/alps+json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/schema+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonSchema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profile/roleEntities": {
            "get": {
                "tags": [
                    "profile-controller"
                ],
                "operationId": "descriptor_1_1_3",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/alps+json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/schema+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonSchema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profile/userEntities": {
            "get": {
                "tags": [
                    "profile-controller"
                ],
                "operationId": "descriptor_1_1_4",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/alps+json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/schema+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonSchema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roleEntities": {
            "get": {
                "tags": [
                    "role-entity-entity-controller"
                ],
                "description": "get-roleentity",
                "operationId": "getCollectionResource-roleentity-get_1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "required": false,
                        "schema": {
                            "minimum": 0,
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedModelEntityModelRoleEntity"
                                }
                            },
                            "application/x-spring-data-compact+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedModelEntityModelRoleEntity"
                                }
                            },
                            "text/uri-list": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "role-entity-entity-controller"
                ],
                "description": "create-roleentity",
                "operationId": "postCollectionResource-roleentity-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleEntityRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelRoleEntity"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roleEntities/search/findAllByNameRole": {
            "get": {
                "tags": [
                    "role-entity-search-controller"
                ],
                "operationId": "executeSearch-roleentity-get",
                "parameters": [
                    {
                        "name": "roles",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelEntityModelRoleEntity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/roleEntities/{id}": {
            "get": {
                "tags": [
                    "role-entity-entity-controller"
                ],
                "description": "get-roleentity",
                "operationId": "getItemResource-roleentity-get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelRoleEntity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "role-entity-entity-controller"
                ],
                "description": "update-roleentity",
                "operationId": "putItemResource-roleentity-put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleEntityRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelRoleEntity"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelRoleEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "role-entity-entity-controller"
                ],
                "description": "delete-roleentity",
                "operationId": "deleteItemResource-roleentity-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "role-entity-entity-controller"
                ],
                "description": "patch-roleentity",
                "operationId": "patchItemResource-roleentity-patch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleEntityRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelRoleEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/roleEntities/{id}/roles": {
            "get": {
                "tags": [
                    "role-entity-property-reference-controller"
                ],
                "description": "get-roleentity-by-roleentity-Id",
                "operationId": "followPropertyReference-roleentity-get_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            },
                            "text/uri-list": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "role-entity-property-reference-controller"
                ],
                "description": "update-roleentity-by-roleentity-Id",
                "operationId": "createPropertyReference-roleentity-put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionModelObject"
                            }
                        },
                        "application/x-spring-data-compact+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionModelObject"
                            }
                        },
                        "text/uri-list": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "role-entity-property-reference-controller"
                ],
                "description": "delete-roleentity-by-roleentity-Id",
                "operationId": "deletePropertyReference-roleentity-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "role-entity-property-reference-controller"
                ],
                "description": "patch-roleentity-by-roleentity-Id",
                "operationId": "createPropertyReference-roleentity-patch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionModelObject"
                            }
                        },
                        "application/x-spring-data-compact+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionModelObject"
                            }
                        },
                        "text/uri-list": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/roleEntities/{id}/roles/{propertyId}": {
            "get": {
                "tags": [
                    "role-entity-property-reference-controller"
                ],
                "description": "get-roleentity-by-roleentity-Id",
                "operationId": "followPropertyReference-roleentity-get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "role-entity-property-reference-controller"
                ],
                "description": "delete-roleentity-by-roleentity-Id",
                "operationId": "deletePropertyReferenceId-roleentity-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/userEntities": {
            "get": {
                "tags": [
                    "user-entity-entity-controller"
                ],
                "description": "get-userentity",
                "operationId": "getCollectionResource-userentity-get_1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Zero-based page index (0..N)",
                        "required": false,
                        "schema": {
                            "minimum": 0,
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The size of the page to be returned",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedModelEntityModelUserEntity"
                                }
                            },
                            "application/x-spring-data-compact+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedModelEntityModelUserEntity"
                                }
                            },
                            "text/uri-list": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user-entity-entity-controller"
                ],
                "description": "create-userentity",
                "operationId": "postCollectionResource-userentity-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserEntityRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelUserEntity"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/userEntities/search/findByUsername": {
            "get": {
                "tags": [
                    "user-entity-search-controller"
                ],
                "operationId": "executeSearch-userentity-get",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelUserEntity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/userEntities/{id}": {
            "get": {
                "tags": [
                    "user-entity-entity-controller"
                ],
                "description": "get-userentity",
                "operationId": "getItemResource-userentity-get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelUserEntity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user-entity-entity-controller"
                ],
                "description": "update-userentity",
                "operationId": "putItemResource-userentity-put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserEntityRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelUserEntity"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelUserEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user-entity-entity-controller"
                ],
                "description": "delete-userentity",
                "operationId": "deleteItemResource-userentity-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "user-entity-entity-controller"
                ],
                "description": "patch-userentity",
                "operationId": "patchItemResource-userentity-patch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserEntityRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityModelUserEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/userEntities/{id}/roles": {
            "get": {
                "tags": [
                    "user-entity-property-reference-controller"
                ],
                "description": "get-roleentity-by-userentity-Id",
                "operationId": "followPropertyReference-userentity-get_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            },
                            "text/uri-list": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user-entity-property-reference-controller"
                ],
                "description": "update-roleentity-by-userentity-Id",
                "operationId": "createPropertyReference-userentity-put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionModelObject"
                            }
                        },
                        "application/x-spring-data-compact+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionModelObject"
                            }
                        },
                        "text/uri-list": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user-entity-property-reference-controller"
                ],
                "description": "delete-roleentity-by-userentity-Id",
                "operationId": "deletePropertyReference-userentity-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "user-entity-property-reference-controller"
                ],
                "description": "patch-roleentity-by-userentity-Id",
                "operationId": "createPropertyReference-userentity-patch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionModelObject"
                            }
                        },
                        "application/x-spring-data-compact+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionModelObject"
                            }
                        },
                        "text/uri-list": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/userEntities/{id}/roles/{propertyId}": {
            "get": {
                "tags": [
                    "user-entity-property-reference-controller"
                ],
                "description": "get-roleentity-by-userentity-Id",
                "operationId": "followPropertyReference-userentity-get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionModelRoleEntity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user-entity-property-reference-controller"
                ],
                "description": "delete-roleentity-by-userentity-Id",
                "operationId": "deletePropertyReferenceId-userentity-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "propertyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/users/v1/": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Список пользователей",
                "description": "Получает список пользователей",
                "operationId": "list",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageModelUserModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Модификация пользователя в системе",
                "description": "Модификация пользователя в системе",
                "operationId": "update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Создание пользователя в системе",
                "description": "Создает пользователя в системе",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/v1/": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Список ролей пользователей",
                "description": "Получает список ролей пользователей",
                "operationId": "list_1",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageModelRoleModel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Изменение роли пользователя",
                "operationId": "update_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Создание роли пользователя",
                "operationId": "create_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/params-time-table/v1": {
            "get": {
                "tags": [
                    "params-time-table"
                ],
                "operationId": "listParams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ParamsTimeTableModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "params-time-table"
                ],
                "operationId": "saveListParams",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ParamsTimeTableModel"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/auth/valid": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Проверка валидации токена",
                "description": "Токен имеет срок действия. Метод проверяет валидность токена по сроку действия",
                "operationId": "validToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Токен авторизаци валидный",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/signin": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Авторизация в системе",
                "description": "Проверяет авторизационные данные в системе. Если авторизация пройдена, выдается токен. Токен нужно будет вставить в заголовок в каждом запросе: \"Authorization: Bearer ПолученныйТокен\"",
                "operationId": "signin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthenticationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Токен авторизации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataModelString"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataModelString"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/v1/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Получение пользователя по ID",
                "description": "Получает пользователя по его идентификатору",
                "operationId": "user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/timetable/v1/numweek/{date}/": {
            "get": {
                "tags": [
                    "TimeTable"
                ],
                "summary": "Номер учебной недели по дате",
                "description": "Получает номер учебной недели по дате",
                "operationId": "getNumWeek",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/timetable/v1/from/{startDt}/to/{endDt}/lecturerId/{lecturerId}": {
            "get": {
                "tags": [
                    "TimeTable"
                ],
                "summary": "Учебное расписание по предователю",
                "description": "Учебное расписание за период по предователю",
                "operationId": "getTimeTableListByLecturer",
                "parameters": [
                    {
                        "name": "startDt",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDt",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "lecturerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimeTableModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/timetable/v1/from/{startDt}/to/{endDt}/groupId/{groupId}": {
            "get": {
                "tags": [
                    "TimeTable"
                ],
                "summary": "Учебное расписание по группе",
                "description": "Учебное расписание за период по группе",
                "operationId": "getTimeTableListByStudentGroup",
                "parameters": [
                    {
                        "name": "startDt",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDt",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimeTableModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/timetable/v1/from/{startDt}/to/{endDt}/build/{buildId}": {
            "get": {
                "tags": [
                    "TimeTable"
                ],
                "summary": "Учебное расписание по корпусу и аудитории",
                "description": "Учебное расписание за период по корпусу и аудитории",
                "operationId": "getTimeTableListByAuditory",
                "parameters": [
                    {
                        "name": "startDt",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDt",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "buildId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "auditory",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimeTableModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/timetable/v1/event/from/{startDt}/to/{endDt}": {
            "get": {
                "tags": [
                    "TimeTable"
                ],
                "summary": "Ученое расписание",
                "description": "Ученое расписание",
                "operationId": "getTimeTableEvent",
                "parameters": [
                    {
                        "name": "startDt",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDt",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimeTableModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/teacher/v1": {
            "get": {
                "tags": [
                    "rest-teacher-controller"
                ],
                "operationId": "getTeacherList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeacherModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/skill/v1/{username}": {
            "get": {
                "tags": [
                    "rest-skill-controller"
                ],
                "operationId": "getSkillListByStudent",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SkillModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/v1/{name}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Получение роли по ключу",
                "operationId": "role",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/person/v1": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Возвращает список персон",
                "description": "Возвращает список персон активных и не активных",
                "operationId": "getPersons",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список персон",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageModelPersonModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/person/v1/student/group/{studentGroupId}": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Возвращает список стедентов, обучающихся в группе",
                "description": "Возвращает список активных стедентов, обучающихся в группе",
                "operationId": "getStudentListByStudentGroup",
                "parameters": [
                    {
                        "name": "studentGroupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список активных сотрудников",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StudentModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/person/v1/employee/active": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Возвращает список активных сотрудников",
                "description": "Возвращает список активных сотрудников, в том числе и по часовиков",
                "operationId": "getEmployeeList",
                "parameters": [
                    {
                        "name": "fio",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "postId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список активных сотрудников",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EmployeeModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mark/v1/{username}": {
            "get": {
                "tags": [
                    "rest-mark-controller"
                ],
                "operationId": "getMarkListByStudent",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MarkModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/group/v2": {
            "get": {
                "tags": [
                    "StudentGroup"
                ],
                "summary": "Список групп (расширенный)",
                "description": "Список групп (расширенный)",
                "operationId": "getStudentGroupExtList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StudentGroupExtModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/group/v1": {
            "get": {
                "tags": [
                    "StudentGroup"
                ],
                "summary": "Список групп",
                "description": "Получает список групп",
                "operationId": "getStudentGroupList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StudentGroupModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/discipline/v1": {
            "get": {
                "tags": [
                    "Discipline"
                ],
                "summary": "Список дисциплин",
                "description": "Получает список зданий",
                "operationId": "getTeacherList_1",
                "responses": {
                    "200": {
                        "description": "Список дисциплин",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/department/v2": {
            "get": {
                "tags": [
                    "Department"
                ],
                "operationId": "getDepartmentsTree",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TreeModelDepartmentModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/department/v1": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Список отделов и кафедр",
                "description": "Получает список отделов и кафедр",
                "operationId": "getDepartmentsList",
                "responses": {
                    "200": {
                        "description": "Список отделов и кафедр",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepartmentModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/building/v1": {
            "get": {
                "tags": [
                    "Building"
                ],
                "summary": "Список зданий",
                "description": "Получает список зданий",
                "operationId": "getTeacherList_2",
                "responses": {
                    "200": {
                        "description": "Список зданий",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/base/v1/semesters": {
            "get": {
                "tags": [
                    "Dictionary"
                ],
                "summary": "Список семестров",
                "description": "Возвращает список семестров",
                "operationId": "getSemesterList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SemesterModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auditorium/v1": {
            "get": {
                "tags": [
                    "Auditorium"
                ],
                "summary": "Список аудиторий",
                "description": "Получает список аудиторий",
                "operationId": "getTeacherList_3",
                "responses": {
                    "200": {
                        "description": "Список аудиторий",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuditoriumModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AbstractJsonSchemaPropertyObject": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "Item": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
                        }
                    },
                    "requiredProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "JsonSchema": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
                        }
                    },
                    "requiredProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "definitions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Item"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "$schema": {
                        "type": "string"
                    }
                }
            },
            "Links": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/Link"
                }
            },
            "RepresentationModelObject": {
                "type": "object",
                "properties": {
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    }
                }
            },
            "EntityModelNotificationEntity": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "COMMISSION_EXAM",
                            "EXPIRES_REG_ADDRESS"
                        ]
                    },
                    "keyObject": {
                        "type": "string"
                    },
                    "textBody": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    }
                }
            },
            "PageMetadata": {
                "type": "object",
                "properties": {
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "PagedModelEntityModelNotificationEntity": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "notificationEntities": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EntityModelNotificationEntity"
                                }
                            }
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    },
                    "page": {
                        "$ref": "#/components/schemas/PageMetadata"
                    }
                }
            },
            "CollectionModelEntityModelNotificationEntity": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "notificationEntities": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EntityModelNotificationEntity"
                                }
                            }
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    }
                }
            },
            "EntityModelUserEntity": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "ldapAuth": {
                        "type": "boolean"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "changed": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    }
                }
            },
            "PagedModelEntityModelUserEntity": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "userEntities": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EntityModelUserEntity"
                                }
                            }
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    },
                    "page": {
                        "$ref": "#/components/schemas/PageMetadata"
                    }
                }
            },
            "CollectionModelRoleEntity": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "roleEntities": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RoleEntityResponse"
                                }
                            }
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    }
                }
            },
            "CollectionModelObject": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "objects": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    }
                }
            },
            "EntityModelParamsTimeTable": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "updateDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    }
                }
            },
            "PagedModelEntityModelParamsTimeTable": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "paramsTimeTables": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EntityModelParamsTimeTable"
                                }
                            }
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    },
                    "page": {
                        "$ref": "#/components/schemas/PageMetadata"
                    }
                }
            },
            "EntityModelRoleEntity": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    }
                }
            },
            "PagedModelEntityModelRoleEntity": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "roleEntities": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EntityModelRoleEntity"
                                }
                            }
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    },
                    "page": {
                        "$ref": "#/components/schemas/PageMetadata"
                    }
                }
            },
            "CollectionModelEntityModelRoleEntity": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "roleEntities": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EntityModelRoleEntity"
                                }
                            }
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/Links"
                    }
                }
            },
            "NotificationEntityRequestBody": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "COMMISSION_EXAM",
                            "EXPIRES_REG_ADDRESS"
                        ]
                    },
                    "keyObject": {
                        "type": "string"
                    },
                    "textBody": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "ParamsTimeTableRequestBody": {
                "type": "object",
                "properties": {
                    "paramType": {
                        "type": "string",
                        "enum": [
                            "TIME_TABLE_MODE"
                        ]
                    },
                    "value": {
                        "type": "string"
                    },
                    "updateDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "RoleEntityRequestBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "RoleEntityResponse": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    }
                }
            },
            "UserEntityRequestBody": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "ldapAuth": {
                        "type": "boolean"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "changed": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "RoleModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "privileges": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StrRefModel"
                        }
                    }
                }
            },
            "StrRefModel": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "val": {
                        "type": "string"
                    }
                }
            },
            "UserModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "ldapAuth": {
                        "type": "boolean"
                    },
                    "roles": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleModel"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "changed": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ParamsTimeTableModel": {
                "type": "object",
                "properties": {
                    "paramType": {
                        "type": "string",
                        "enum": [
                            "TIME_TABLE_MODE"
                        ]
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "AuthenticationRequest": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "DataModelString": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ErrorDescription"
                    }
                }
            },
            "ErrorDescription": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "100 CONTINUE",
                            "101 SWITCHING_PROTOCOLS",
                            "102 PROCESSING",
                            "103 EARLY_HINTS",
                            "103 CHECKPOINT",
                            "200 OK",
                            "201 CREATED",
                            "202 ACCEPTED",
                            "203 NON_AUTHORITATIVE_INFORMATION",
                            "204 NO_CONTENT",
                            "205 RESET_CONTENT",
                            "206 PARTIAL_CONTENT",
                            "207 MULTI_STATUS",
                            "208 ALREADY_REPORTED",
                            "226 IM_USED",
                            "300 MULTIPLE_CHOICES",
                            "301 MOVED_PERMANENTLY",
                            "302 FOUND",
                            "302 MOVED_TEMPORARILY",
                            "303 SEE_OTHER",
                            "304 NOT_MODIFIED",
                            "305 USE_PROXY",
                            "307 TEMPORARY_REDIRECT",
                            "308 PERMANENT_REDIRECT",
                            "400 BAD_REQUEST",
                            "401 UNAUTHORIZED",
                            "402 PAYMENT_REQUIRED",
                            "403 FORBIDDEN",
                            "404 NOT_FOUND",
                            "405 METHOD_NOT_ALLOWED",
                            "406 NOT_ACCEPTABLE",
                            "407 PROXY_AUTHENTICATION_REQUIRED",
                            "408 REQUEST_TIMEOUT",
                            "409 CONFLICT",
                            "410 GONE",
                            "411 LENGTH_REQUIRED",
                            "412 PRECONDITION_FAILED",
                            "413 PAYLOAD_TOO_LARGE",
                            "413 REQUEST_ENTITY_TOO_LARGE",
                            "414 URI_TOO_LONG",
                            "414 REQUEST_URI_TOO_LONG",
                            "415 UNSUPPORTED_MEDIA_TYPE",
                            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                            "417 EXPECTATION_FAILED",
                            "418 I_AM_A_TEAPOT",
                            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                            "420 METHOD_FAILURE",
                            "421 DESTINATION_LOCKED",
                            "422 UNPROCESSABLE_ENTITY",
                            "423 LOCKED",
                            "424 FAILED_DEPENDENCY",
                            "425 TOO_EARLY",
                            "426 UPGRADE_REQUIRED",
                            "428 PRECONDITION_REQUIRED",
                            "429 TOO_MANY_REQUESTS",
                            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                            "500 INTERNAL_SERVER_ERROR",
                            "501 NOT_IMPLEMENTED",
                            "502 BAD_GATEWAY",
                            "503 SERVICE_UNAVAILABLE",
                            "504 GATEWAY_TIMEOUT",
                            "505 HTTP_VERSION_NOT_SUPPORTED",
                            "506 VARIANT_ALSO_NEGOTIATES",
                            "507 INSUFFICIENT_STORAGE",
                            "508 LOOP_DETECTED",
                            "509 BANDWIDTH_LIMIT_EXCEEDED",
                            "510 NOT_EXTENDED",
                            "511 NETWORK_AUTHENTICATION_REQUIRED"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Pageable": {
                "type": "object",
                "properties": {
                    "page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PageModelUserModel": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserModel"
                        }
                    }
                }
            },
            "BaseModel": {
                "required": [
                    "id",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "TeacherModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "shortName": {
                        "type": "string"
                    },
                    "fio": {
                        "type": "string"
                    }
                }
            },
            "TimeTableModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dateEvent": {
                        "type": "string",
                        "format": "date"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "discipline": {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    "groups": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseModel"
                        }
                    },
                    "build": {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    "auditory": {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    "lecturers": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TeacherModel"
                        }
                    },
                    "abbrlessontype": {
                        "type": "string"
                    },
                    "lessontype": {
                        "type": "string"
                    },
                    "week": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "weekday": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "weekType": {
                        "type": "string"
                    },
                    "onlineEvent": {
                        "type": "string"
                    },
                    "online": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Skill": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SkillModel": {
                "type": "object",
                "properties": {
                    "principalId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "type": "string"
                    },
                    "disciplines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkillRowModel"
                        }
                    }
                }
            },
            "SkillRowModel": {
                "type": "object",
                "properties": {
                    "discipline": {
                        "type": "string"
                    },
                    "skills": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Skill"
                        }
                    }
                }
            },
            "PageModelRoleModel": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleModel"
                        }
                    }
                }
            },
            "PageModelPersonModel": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PersonModel"
                        }
                    }
                }
            },
            "PersonModel": {
                "required": [
                    "email",
                    "fio",
                    "firstName",
                    "guid",
                    "id",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "guid": {
                        "type": "string"
                    },
                    "fio": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "personNum": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "active": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "groups": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StudentGroupPersonModel"
                        }
                    },
                    "posts": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostPersonModel"
                        }
                    },
                    "startAccessDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endAccessDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PostPersonModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "department": {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    "main": {
                        "type": "boolean"
                    }
                }
            },
            "StudentGroupPersonModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "department": {
                        "$ref": "#/components/schemas/BaseModel"
                    }
                }
            },
            "StudentModel": {
                "required": [
                    "department",
                    "departmentId",
                    "email",
                    "fio",
                    "firstName",
                    "groupId",
                    "groupName",
                    "guid",
                    "id",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "guid": {
                        "type": "string"
                    },
                    "fio": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "personNum": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "department": {
                        "type": "string"
                    },
                    "departmentId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "EmployeeModel": {
                "required": [
                    "email",
                    "fio",
                    "firstName",
                    "guid",
                    "id",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "guid": {
                        "type": "string"
                    },
                    "fio": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "personNum": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "posts": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostPersonModel"
                        }
                    }
                }
            },
            "MarkModel": {
                "type": "object",
                "properties": {
                    "formControlShort": {
                        "type": "string"
                    },
                    "formControl": {
                        "type": "string"
                    },
                    "discipline": {
                        "type": "string"
                    },
                    "course": {
                        "type": "string"
                    },
                    "term": {
                        "type": "string"
                    },
                    "teachLastname": {
                        "type": "string"
                    },
                    "teachFirstname": {
                        "type": "string"
                    },
                    "teachMiddlename": {
                        "type": "string"
                    },
                    "year": {
                        "type": "string"
                    },
                    "mark": {
                        "type": "string"
                    },
                    "principalId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "StudentGroupExtModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "course": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "faculty": {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    "chair": {
                        "$ref": "#/components/schemas/BaseModel"
                    }
                }
            },
            "StudentGroupModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "DepartmentModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "parentId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "shortTitle": {
                        "type": "string"
                    },
                    "typeCode": {
                        "type": "string"
                    },
                    "typeTitle": {
                        "type": "string"
                    }
                }
            },
            "TreeModelDepartmentModel": {
                "type": "object",
                "properties": {
                    "node": {
                        "$ref": "#/components/schemas/DepartmentModel"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TreeModelDepartmentModel"
                        }
                    }
                }
            },
            "SemesterModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "AuditoriumModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "buildName": {
                        "type": "string"
                    },
                    "buildId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "height": {
                        "type": "number",
                        "format": "float"
                    },
                    "length": {
                        "type": "number",
                        "format": "float"
                    },
                    "width": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "Link": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string"
                    },
                    "hreflang": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "deprecation": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "templated": {
                        "type": "boolean"
                    }
                }
            }
        }
    }
}